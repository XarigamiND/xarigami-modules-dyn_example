<xar:comment> License: GPL http://www.gnu.org/copyleft/gpl.html </xar:comment>
<!-- common admin menu for this module - remove link to the current function -->

<div class="xar-mod-page">
    <div class="xar-mod-head">
         <xar:comment>Common module menu - only show the menus if this is NOT an ajax request</xar:comment>
        <xar:if condition="!xarRequestIsAJAX()">
            <xar:template type="module" module="base" file="admin-menu" />
        </xar:if>
    </div>
    <div class="xar-mod-body">
        <h1><xar:mlstring>List of dynamic data examples</xar:mlstring></h1>
        <div class="xar-mod-content">

          <h3><xar:mlstring>APPROACH # 1 : the &lt;xar:data-list ...&gt; tag</xar:mlstring></h3>

          <p class="xar-form-input-wrapper-before">
              <xar:mlstring>This tag will automatically retrieve the list of items from DynamicData,
              and present them according to its default </xar:mlstring>objects/showlist.xd<xar:mlstring> template.</xar:mlstring>
          </p>

          <xar:data-list module="dyn_example" itemtype="0" catid="$catid" numitems="$itemsperpage" startnum="$startnum" tplmodule="dyn_example" sort="$sort" sortorder="$sortorder"/>

          <p class="xar-form-input-wrapper-before"><xar:mlstring>If you want to provide your own presentation here, you can specify a
             different <code>layout="..."</code> to use in the default template, or you can specify your
             own <code>template="..."</code> here as well.</xar:mlstring></p>



          <h3><xar:mlstring>APPROACH # 2 : the &lt;xar:data-getitems ...&gt; tag</xar:mlstring></h3>

          <p class="xar-form-input-wrapper-before">
              <xar:mlstring>This tag will retrieve the properties and values from DynamicData and
              make them available in the 'properties' and 'values' variables in your template.</xar:mlstring>
          </p>

           <xar:data-getitems name="$properties" value="$values" module="dyn_example" itemtype="0" catid="$catid" numitems="$itemsperpage" startnum="$startnum" sort="$sort" sortorder="$sortorder"/>

          <p class="xar-form-input-wrapper-before">
              <xar:mlstring>You can then use those variables to build your own layout.
                  The <code>&lt;xar:data-label...&gt;</code> and <code>&lt;xar:data-output...&gt;</code> tags allow
                  you to show individual labels or value outputs in the template.
              </xar:mlstring>
          </p>

          <table class="xar-items xar-noborder" cellspacing="1" cellpadding="2">
            <tr>
                <xar:foreach in="$properties" key="$name">
                    <th class="xar-align-center"><xar:data-label property="$properties[$name]" /></th>
                </xar:foreach>
                <th class="xar-align-center"><xar:mlstring>Options</xar:mlstring></th>
            </tr>
            <xar:foreach in="$values" key="$itemid" value="$fields">
            <tr>
                <xar:foreach in="$properties" key="$name">
                    <xar:if condition="!empty($fields[$name])">
                      <td><xar:data-output property="$properties[$name]" value="$fields[$name]" /></td>
                    <xar:else />
                      <td>&nbsp;</td>
                    </xar:if>
                </xar:foreach>
                <td width="30%" class="xar-align-center xar-action-items">
                    <a href="&xar-modurl-dyn_example-user-display;&amp;itemid=#$itemid#"><xar:mlstring>View</xar:mlstring></a> |
                    <a href="&xar-modurl-dyn_example-user-modify;&amp;itemid=#$itemid#"><xar:mlstring>Edit</xar:mlstring></a> |
                    <a href="&xar-modurl-dyn_example-user-delete;&amp;itemid=#$itemid#"><xar:mlstring>Delete</xar:mlstring></a>
                </td>
            </tr>
            </xar:foreach>
            <tr>
                <xar:foreach in="$properties" key="$name">
                    <td>&nbsp;</td>
                </xar:foreach>
                <td class="xar-align-center"><a href="&xar-modurl-dyn_example-admin-new;"><xar:mlstring>New</xar:mlstring></a></td>
            </tr>
            </table>



          <h3><xar:mlstring>APPROACH # 3 : getting the object list via API</xar:mlstring></h3>

          <p>
              <xar:mlstring>After retrieving the object list via API, you can pass along the whole
              object list to the template and use: </xar:mlstring> <code>&lt;xar:data-list object="$mylist"&gt;,</code>
          </p>

          <xar:data-list object="$mylist" tplmodule="dyn_example" />

          <p><xar:mlstring>or pass along the properties and values and work like in APPROACH # 2 -
              see the user view for an example of that.</xar:mlstring>
          </p>

          <h3><xar:mlstring>APPROACH # 4 : getting the raw item values via API</xar:mlstring></h3>

          <p>
              <xar:mlstring>Here you'll have to handle the output format of the values yourself -
              in the module code and/or template...</xar:mlstring>
          </p>

            <xar:if condition="!empty($items) and count($items) gt 0">
                <table class="xar-items xar-noborder" cellspacing="1" cellpadding="2">
                <tr>
                <xar:foreach in="$labels" value="$label">
                    <th class="xar-align-center">#$label#</th>
                </xar:foreach>
                </tr>
                <xar:foreach in="$items" key="$itemid" value="$fields">
                <tr>
                    <xar:foreach in="$fields" key="$name" value="$value">
                        <td>#$value#</td>
                    </xar:foreach>
                    <td width="30%" class="xar-align-center">
                        <a href="&xar-modurl-dyn_example-user-display;&amp;itemid=#$itemid#"><xar:mlstring>View</xar:mlstring></a> |
                        <a href="&xar-modurl-dyn_example-user-modify;&amp;type=admin&amp;itemid=#$itemid#"><xar:mlstring>Edit</xar:mlstring></a> |
                        <a href="&xar-modurl-dyn_example-user-delete;&amp;type=admin&amp;itemid=#$itemid#"><xar:mlstring>Delete</xar:mlstring></a>
                    </td>
                </tr>
                </xar:foreach>
                <tr>
                    <xar:foreach in="$fields" key="$name">
                        <td>&nbsp;</td>
                    </xar:foreach>
                    <td class="xar-align-center"><a href="&xar-modurl-dyn_example-admin-new;"><xar:mlstring>New</xar:mlstring></a></td>
                </tr>
                </table>
            <xar:else/>
                <a href="&xar-modurl-dyn_example-admin-new;"><xar:mlstring>New</xar:mlstring></a>
            </xar:if>
        </div>
    </div>
</div>